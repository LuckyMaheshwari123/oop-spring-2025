#include<iostream>
using namespace std;
class Vehicle{
	string model;
	double rate;
	public:
		virtual double getdailyRate()=0;
		virtual void display()=0;
		virtual ~Vehicle() {} // Virtual destructor for proper cleanup
	};
class Car:public Vehicle{
	string Cmodel;
	double Crate;
	public:
	Car(){
		Cmodel="unknown";
		Crate=0;
	}
	Car(string model,double rate){
		Cmodel=model;
		Crate=rate;
	}
	double getdailyRate(){
		return Crate;
	}
	void display(){
		cout<<"The Car model is:"<<Cmodel<<endl;
		cout<<"The Car rate is:"<<Crate<<endl;
	}
	
};
class Bike:public Vehicle{
	string Cmodel;
	double Crate;
	public:
	Bike(){
		Cmodel="unknown";
		Crate=0;
	}
	Bike(string model,double rate){
		Cmodel=model;
		Crate=rate;
	}
	double getdailyRate(){
		return Crate;
	}
	void display(){
		cout<<"The bike model is:"<<Cmodel<<endl;
		cout<<"The bike rate is:"<<Crate<<endl;
	}
	
};	
			
int main(){
 
	Car c1("alto",120000);
	Bike b1("Honda",30000);
	Vehicle *v1=&c1;

	Vehicle *v2=&b1;
	
	cout<<v1->getdailyRate()<<endl;
	v1->display();
	cout<<v2->getdailyRate()<<endl;
	v2->display();
}
