#include <iostream>
using namespace std;

class Fraction {
    int num, den;

public:
    Fraction(int n = 0, int d = 1) : num(n), den(d ? d : 1) {
        if (den < 0) num = -num, den = -den;
    }

    Fraction operator+(const Fraction& f) const {
        return Fraction(num * f.den + f.num * den, den * f.den);
    }

    Fraction operator-(const Fraction& f) const {
        return Fraction(num * f.den - f.num * den, den * f.den);
    }

    Fraction operator*(const Fraction& f) const {
        return Fraction(num * f.num, den * f.den);
    }

    Fraction operator/(const Fraction& f) const {
        return Fraction(num * f.den, den * f.num);
    }

    friend ostream& operator<<(ostream& os, const Fraction& f) {
        return os << f.num << '/' << f.den;
    }
};

int main() {
    Fraction f1(3, 4), f2(2, 5);

    cout << "f1 = " << f1 << "\nf2 = " << f2 << endl;
    cout << "f1 + f2 = " << f1 + f2 << endl;
    cout << "f1 - f2 = " << f1 - f2 << endl;
    cout << "f1 * f2 = " << f1 * f2 << endl;
    cout << "f1 / f2 = " << f1 / f2 << endl;

    return 0;
}
